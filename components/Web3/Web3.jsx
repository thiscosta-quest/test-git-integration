/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button, Link } from '@mui/material';
import { styled } from '@mui/material/styles';
import useWeb3 from 'components/Web3/useWeb3';

const ScreensDesktop = styled('div')({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
});

const HeroBg = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
});

const HeroContent = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: data.currentVariant === 'ScreensMobile' ? `flex-start` : `center`,
  padding: data.currentVariant === 'ScreensMobile' ? `0px` : `40px 0px 0px 0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? 'unset'
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `1440px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'ScreensTablet'
      ? `stretch`
      : data.currentVariant === 'ScreensMobile'
      ? `stretch`
      : 'unset',
}));

const HeroDesktop = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/Web3_hero_desktop.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: data.currentVariant === 'ScreensTablet' ? `center` : `flex-start`,
  padding:
    data.currentVariant === 'ScreensTablet'
      ? `80px 50px 60px 50px`
      : data.currentVariant === 'ScreensMobile'
      ? `80px 15px 60px 15px`
      : `80px 180px 60px 110px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const HeroAll = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === 'ScreensMobile' ? `6px 0px 0px 0px` : `0px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'ScreensTablet' ? 'unset' : `stretch`,
  margin: `0px`,
  width: data.currentVariant === 'ScreensTablet' ? `668px` : 'unset',
}));

const HeroContent1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreensMobile' ? `0px` : `0px 140px 0px 0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
}));

const Frame125 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  width: data.currentVariant === 'ScreensMobile' ? `337px` : 'unset',
}));

const TakeDesignToLaunc = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreensTablet'
      ? `100px`
      : data.currentVariant === 'ScreensMobile'
      ? `56px`
      : `110px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `56px` : `80px`,
  textTransform: `none`,
  background:
    data.currentVariant === 'ScreensTablet'
      ? `linear-gradient(-90deg, rgba(254, 136, 136, 1) 27.162295143312438%, rgba(128, 102, 255, 1) 97.8620029592611%)`
      : data.currentVariant === 'ScreensMobile'
      ? `linear-gradient(-90deg, rgba(254, 136, 136, 1) 27.16229514331245%, rgba(128, 102, 255, 1) 97.86200295926109%)`
      : `linear-gradient(-90deg, rgba(254, 136, 136, 1) 27.16229514331244%, rgba(128, 102, 255, 1) 97.86200295926109%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: `0px`,
}));

const TakeDesignToLaunc1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreensTablet'
      ? `100px`
      : data.currentVariant === 'ScreensMobile'
      ? `56px`
      : `110px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `56px` : `92px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `742px`
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `721px`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `-2px 0px 0px 0px`
      : `8px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const HeroSub = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'ScreensTablet'
      ? `column`
      : data.currentVariant === 'ScreensMobile'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'ScreensTablet' ? `center` : `flex-start`,
  alignItems:
    data.currentVariant === 'ScreensTablet'
      ? `flex-start`
      : data.currentVariant === 'ScreensMobile'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `30px 0px 0px 0px`
      : `23px 0px 0px 0px`,
  width: data.currentVariant === 'ScreensMobile' ? `337px` : 'unset',
}));

const NeoFromQuestAiEm = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `22px` : `34px`,
  textTransform: `none`,
  width: data.currentVariant === 'ScreensMobile' ? `323px` : `614px`,
  margin: `0px`,
}));

const ButtonOutlined = styled(Button, {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  width: data.currentVariant === 'ScreensMobile' ? 'unset' : `180px`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `20px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px 0px 0px 0px`
      : `0px 0px 0px 10px`,
}));

const Sec1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreensTablet'
      ? `0px 50px 40px 50px`
      : data.currentVariant === 'ScreensMobile'
      ? `0px 15px 40px 15px`
      : `0px 180px 40px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `30px 0px 0px 0px`,
  maxWidth:
    data.currentVariant === 'ScreensTablet'
      ? `360px`
      : data.currentVariant === 'ScreensMobile'
      ? `unset`
      : `1051px`,
}));

const Frame1251 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'ScreensTablet'
      ? `column`
      : data.currentVariant === 'ScreensMobile'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'ScreensTablet' ? `center` : `flex-start`,
  alignItems:
    data.currentVariant === 'ScreensTablet'
      ? `flex-start`
      : data.currentVariant === 'ScreensMobile'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `668px`
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `1080px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Sec4Text = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow:
    data.currentVariant === 'ScreensTablet'
      ? 'unset'
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `1`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'ScreensTablet'
      ? `stretch`
      : data.currentVariant === 'ScreensMobile'
      ? `stretch`
      : 'unset',
}));

const Subtitle = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const ActionsIcon = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const NewWay = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: data.currentVariant === 'ScreensMobile' ? 'unset' : `417px`,
  margin: `0px 0px 0px 8px`,
}));

const Frame1252 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `18px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Achieve = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `24px` : `44px`,
  letterSpacing: data.currentVariant === 'ScreensMobile' ? `-1px` : `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `24px` : `42px`,
  textTransform: `none`,
  width: data.currentVariant === 'ScreensMobile' ? 'unset' : `442px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Product = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `24px` : `44px`,
  letterSpacing: data.currentVariant === 'ScreensMobile' ? `-1px` : `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `24px` : `42px`,
  textTransform: `none`,
  background: `linear-gradient(-90deg, rgba(254, 136, 136, 1) 27.16229514331244%, rgba(128, 102, 255, 1) 97.86200295926109%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: `0px`,
}));

const DevelopmentNirvana = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `24px` : `44px`,
  letterSpacing: data.currentVariant === 'ScreensMobile' ? `-1px` : `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `24px` : `42px`,
  textTransform: `none`,
  width: data.currentVariant === 'ScreensMobile' ? 'unset' : `442px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Dashboard = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: data.currentVariant === 'ScreensMobile' ? `192px` : `340px`,
  width: data.currentVariant === 'ScreensMobile' ? `345px` : `608px`,
  objectFit: `cover`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px 0px 0px 0px`
      : `0px 0px 0px 30px`,
}));

const Divider = styled('div')({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `2px`,
  margin: `40px 0px 0px 0px`,
});

const BuildBoldPoints = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'ScreensTablet'
      ? `column`
      : data.currentVariant === 'ScreensMobile'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'ScreensTablet'
      ? `flex-start`
      : data.currentVariant === 'ScreensMobile'
      ? `flex-start`
      : `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `668px`
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `1080px`,
  margin: `40px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Frame1253 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `302.67px`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `0px`
      : data.currentVariant === 'ScreensMobile'
      ? `0px`
      : 'unset',
}));

const Icon1 = styled('img')({
  height: `30px`,
  width: `30px`,
  margin: `0px`,
});

const MakeExisting = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  width: `303px`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const MakeExisting1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `22px` : `26px`,
  textTransform: `none`,
  width: `303px`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const Frame1254 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `302.67px`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `50px 0px 0px 0px`
      : 'unset',
}));

const Icon2 = styled('img')({
  height: `30px`,
  width: `30px`,
  margin: `0px`,
});

const BuildConsistently = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: `24px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const BuildConsistently1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `22px` : `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const Frame1255 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `302.67px`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `50px 0px 0px 0px`
      : 'unset',
}));

const Icon3 = styled('img')({
  height: `30px`,
  width: `30px`,
  margin: `0px`,
});

const IterateBetween = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const IterateBetween1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `22px` : `26px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const Sec2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/Web3_sec2.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreensTablet'
      ? `80px 50px`
      : data.currentVariant === 'ScreensMobile'
      ? `71px 15px 111px 15px`
      : `80px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `30px 0px 0px 0px`,
}));

const Frame1256 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'ScreensTablet'
      ? `column`
      : data.currentVariant === 'ScreensMobile'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'ScreensTablet' ? `center` : `flex-start`,
  alignItems:
    data.currentVariant === 'ScreensTablet'
      ? `flex-start`
      : data.currentVariant === 'ScreensMobile'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `668px`
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `1080px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Sec4Text1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow:
    data.currentVariant === 'ScreensTablet'
      ? 'unset'
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `1`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'ScreensTablet'
      ? `stretch`
      : data.currentVariant === 'ScreensMobile'
      ? `stretch`
      : 'unset',
}));

const Subtitle1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon1 = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const NewWay1 = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `417px`,
  margin: `0px 0px 0px 8px`,
});

const Frame1257 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `24px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Frame1258 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: data.currentVariant === 'ScreensMobile' ? 'unset' : `442px`,
  margin: `0px`,
}));

const TakeDesignToLaunc2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `32px` : `44px`,
  letterSpacing: data.currentVariant === 'ScreensMobile' ? `-1px` : `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `30px` : `42px`,
  textTransform: `none`,
  background:
    data.currentVariant === 'ScreensMobile'
      ? `linear-gradient(-90deg, rgba(254, 136, 136, 1) 27.16229514331245%, rgba(128, 102, 255, 1) 97.86200295926109%)`
      : `linear-gradient(-90deg, rgba(254, 136, 136, 1) 27.16229514331245%, rgba(128, 102, 255, 1) 97.8620029592611%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: `0px`,
}));

const TakeDesignToLaunc3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `32px` : `44px`,
  letterSpacing: data.currentVariant === 'ScreensMobile' ? `-1px` : `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `30px` : `42px`,
  textTransform: `none`,
  width: data.currentVariant === 'ScreensMobile' ? 'unset' : `442px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const NeoFromQuestAiEm1 = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `500`,
  fontSize: `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `24px 0px 0px 0px`,
});

const FigmaToReactWithMui = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height:
    data.currentVariant === 'ScreensTablet'
      ? `596.68px`
      : data.currentVariant === 'ScreensMobile'
      ? `308.17px`
      : `444px`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `668px`
      : data.currentVariant === 'ScreensMobile'
      ? `345px`
      : `497.07px`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px 0px 0px 0px`
      : `0px 0px 0px 30px`,
}));

const Divider1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `2px`,
  margin: data.currentVariant === 'ScreensMobile' ? `40px 0px 0px 0px` : `0px`,
}));

const BuildBoldPoints1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'ScreensTablet'
      ? `column`
      : data.currentVariant === 'ScreensMobile'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'ScreensTablet'
      ? `flex-start`
      : data.currentVariant === 'ScreensMobile'
      ? `flex-start`
      : `space-between`,
  alignItems: `flex-start`,
  padding: data.currentVariant === 'ScreensMobile' ? `0px` : `30px 0px 0px 0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `668px`
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `1080px`,
  margin: data.currentVariant === 'ScreensMobile' ? `40px 0px 0px 0px` : `0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Frame1259 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `0px`
      : data.currentVariant === 'ScreensMobile'
      ? `0px`
      : 'unset',
}));

const Icon4 = styled('img')({
  height: `30px`,
  width: `30px`,
  margin: `0px`,
});

const MakeExisting2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  width: `302.67px`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const MakeExisting3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `22px` : `26px`,
  textTransform: `none`,
  width: `302.67px`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const Frame12510 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `50px 0px 0px 0px`
      : 'unset',
}));

const Icon5 = styled('img')({
  height: `30px`,
  width: `30px`,
  margin: `0px`,
});

const BuildConsistently2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: `24px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  width: `302.67px`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const BuildConsistently3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `22px` : `26px`,
  textTransform: `none`,
  width: `302.67px`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const Frame126 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `50px 0px 0px 0px`
      : 'unset',
}));

const Icon6 = styled('img')({
  height: `30px`,
  width: `30px`,
  margin: `0px`,
});

const IterateBetween2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  width: `302.67px`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const IterateBetween3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `22px` : `26px`,
  textTransform: `none`,
  width: `302.67px`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `12px 0px 0px 0px`,
}));

const Sec3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/Web3_sec3.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreensTablet'
      ? `0px 50px 80px 50px`
      : data.currentVariant === 'ScreensMobile'
      ? `0px 12px 80px 12px`
      : `0px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `30px 0px 0px 0px`,
}));

const Frame127 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `668px`
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `1080px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Subtitle2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon2 = styled('img')({
  height: `14px`,
  width: `12.95px`,
  margin: `0px`,
});

const NeoFromQuestAiEm2 = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `385.7px`,
  margin: `0px 0px 0px 6px`,
});

const DiscoverThe = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `32px` : `36px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `30px` : `34px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `24px 0px 0px 0px`,
}));

const Examples = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'ScreensTablet'
      ? `column`
      : data.currentVariant === 'ScreensMobile'
      ? `column`
      : `row`,
  justifyContent:
    data.currentVariant === 'ScreensTablet'
      ? `flex-start`
      : data.currentVariant === 'ScreensMobile'
      ? `flex-start`
      : `space-between`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `24px 0px 0px 0px`,
}));

const Frame12511 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: data.currentVariant === 'ScreensTablet' ? 'unset' : `353.33px`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `0px`
      : data.currentVariant === 'ScreensMobile'
      ? `0px`
      : 'unset',
}));

const Rectangle178 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage:
    data.currentVariant === 'ScreensTablet'
      ? `url(assets/images/undefined)`
      : data.currentVariant === 'ScreensMobile'
      ? `url(assets/images/undefined)`
      : `url(assets/images/Web3_Rectangle_178.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  border: `1px solid rgba(255, 255, 255, 0.35)`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'ScreensTablet' ? 'unset' : `stretch`,
  height: data.currentVariant === 'ScreensTablet' ? `334px` : `233px`,
  margin: `0px`,
  width: data.currentVariant === 'ScreensTablet' ? `507px` : 'unset',
}));

const ImportYourDifferen = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `22px` : `24px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `14px 0px 0px 0px`,
}));

const Frame1261 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: data.currentVariant === 'ScreensTablet' ? 'unset' : `353.33px`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `24px 0px 0px 0px`
      : 'unset',
}));

const Rectangle1781 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage:
    data.currentVariant === 'ScreensTablet'
      ? `url(assets/images/undefined)`
      : data.currentVariant === 'ScreensMobile'
      ? `url(assets/images/undefined)`
      : `url(assets/images/Web3_Rectangle_178_1.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  border: `1px solid rgba(255, 255, 255, 0.35)`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'ScreensTablet' ? 'unset' : `stretch`,
  height: data.currentVariant === 'ScreensTablet' ? `334px` : `233px`,
  margin: `0px`,
  width: data.currentVariant === 'ScreensTablet' ? `507px` : 'unset',
}));

const ImportYourDifferen1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `22px` : `24px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `14px 0px 0px 0px`,
}));

const Frame1271 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: data.currentVariant === 'ScreensTablet' ? 'unset' : `353.33px`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `24px 0px 0px 0px`
      : 'unset',
}));

const Rectangle1782 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage:
    data.currentVariant === 'ScreensTablet'
      ? `url(assets/images/undefined)`
      : data.currentVariant === 'ScreensMobile'
      ? `url(assets/images/undefined)`
      : `url(assets/images/Web3_Rectangle_178_2.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  border: `1px solid rgba(255, 255, 255, 0.35)`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'ScreensTablet' ? 'unset' : `stretch`,
  height: data.currentVariant === 'ScreensTablet' ? `335px` : `233px`,
  margin: `0px`,
  width: data.currentVariant === 'ScreensTablet' ? `507px` : 'unset',
}));

const ImportYourDifferen2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `22px` : `24px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `24px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `14px 0px 0px 0px`,
}));

const Sec6 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreensTablet'
      ? `0px 50px`
      : data.currentVariant === 'ScreensMobile'
      ? `90px 15px 0px 15px`
      : `90px 180px 0px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `30px 0px 0px 0px`,
}));

const Frame171 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  width: data.currentVariant === 'ScreensTablet' ? `668px` : 'unset',
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Frame1272 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreensMobile'
      ? `0px 0px 70px 0px`
      : `0px 0px 100px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'ScreensTablet'
      ? `stretch`
      : data.currentVariant === 'ScreensMobile'
      ? `stretch`
      : 'unset',
}));

const Subtitle3 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon3 = styled('img')({
  height: `14px`,
  width: `12.95px`,
  margin: `0px`,
});

const NeoFromQuestAiEm3 = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `385.7px`,
  margin: `0px 0px 0px 6px`,
});

const DiscoverThe1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `30px` : `36px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `30px` : `34px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `596px`
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `777px`,
  margin: `24px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Chart1 = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height:
    data.currentVariant === 'ScreensTablet'
      ? `792px`
      : data.currentVariant === 'ScreensMobile'
      ? `406px`
      : `1160px`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `668px`
      : data.currentVariant === 'ScreensMobile'
      ? `345px`
      : `986px`,
  objectFit: `contain`,
  margin: `24px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'ScreensTablet' ? `stretch` : 'unset',
}));

const Sec7 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/Web3_sec7.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreensTablet'
      ? `0px 50px`
      : data.currentVariant === 'ScreensMobile'
      ? `0px 15px`
      : `0px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `30px 0px 0px 0px`,
}));

const Frame1711 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  width: data.currentVariant === 'ScreensTablet' ? `668px` : 'unset',
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Frame1273 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreensTablet'
      ? `0px 70px 100px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `0px 0px 100px 0px`
      : `0px 70px 60px 0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? 'unset'
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `1080px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'ScreensTablet'
      ? `stretch`
      : data.currentVariant === 'ScreensMobile'
      ? `stretch`
      : 'unset',
}));

const Subtitle4 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon4 = styled('img')({
  height: `14px`,
  width: `12.95px`,
  margin: `0px`,
});

const NeoFromQuestAiEm4 = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `385.7px`,
  margin: `0px 0px 0px 6px`,
});

const DiscoverThe2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `24px` : `36px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: `34px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `24px 0px 0px 0px`,
}));

const Frame12512 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  border:
    data.currentVariant === 'ScreensTablet'
      ? `1.855555534362793px solid rgba(255, 255, 255, 0.29)`
      : `3px solid rgba(255, 255, 255, 0.29)`,
  boxSizing: `border-box`,
  borderRadius:
    data.currentVariant === 'ScreensTablet'
      ? `18.55555534362793px`
      : data.currentVariant === 'ScreensMobile'
      ? `12px`
      : `30px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  height:
    data.currentVariant === 'ScreensTablet'
      ? `204.73px`
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `331px`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `668px`
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `1080px`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `24px 0px 0px 0px`,
  overflow: `hidden`,
}));

const Chart11 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage:
    data.currentVariant === 'ScreensTablet'
      ? `url(assets/images/undefined)`
      : data.currentVariant === 'ScreensMobile'
      ? `url(assets/images/undefined)`
      : `url(assets/images/Web3_chart_1_1.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  border:
    data.currentVariant === 'ScreensTablet'
      ? `0.6185185313224792px solid rgba(0, 0, 0, 1)`
      : `1px solid rgba(0, 0, 0, 1)`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? 'unset' : `stretch`,
  height:
    data.currentVariant === 'ScreensTablet'
      ? `203.49px`
      : data.currentVariant === 'ScreensMobile'
      ? `105px`
      : `329px`,
  margin: `0px`,
  width: data.currentVariant === 'ScreensMobile' ? `347px` : 'unset',
}));

const LearnMore = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'ScreensTablet'
      ? `column`
      : data.currentVariant === 'ScreensMobile'
      ? `column`
      : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 10px 0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `24px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'ScreensTablet'
      ? `stretch`
      : data.currentVariant === 'ScreensMobile'
      ? `stretch`
      : 'unset',
  height: data.currentVariant === 'ScreensMobile' ? `40px` : 'unset',
}));

const Link1 = styled(Link, {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `20px` : `30px`,
  textTransform: `none`,
  margin: `0px`,
}));

const About = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing:
    data.currentVariant === 'ScreensMobile' ? `0px` : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `26px` : `30px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `0px`
      : data.currentVariant === 'ScreensMobile'
      ? `0px`
      : `0px 0px 0px 5px`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `460px`
      : data.currentVariant === 'ScreensMobile'
      ? `311px`
      : 'unset',
}));

const ReadyVid = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreensMobile'
      ? `70px 15px`
      : `70px 210px 70px 250px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `30px 0px 0px 0px`,
}));

const Frame1274 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Frame12513 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Subtitle5 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon5 = styled('img')({
  height: `14px`,
  width: `12.95px`,
  margin: `0px`,
});

const NeoFromQuestAiEm5 = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `385.7px`,
  margin: `0px 0px 0px 6px`,
});

const DiscoverThe3Span1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `30px` : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `30px` : `60px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
  alignSelf: 'unset',
}));

const DiscoverThe3Span2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `30px` : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `30px` : `60px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
  alignSelf: 'unset',
}));

const DiscoverThe3Span3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `30px` : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `30px` : `60px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
  alignSelf: 'unset',
}));

const DiscoverThe3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `30px` : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `30px` : `60px`,
  textTransform: `none`,
  width: data.currentVariant === 'ScreensMobile' ? 'unset' : `980px`,
  margin: `18px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const Typeform = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundColor: `rgba(196, 196, 196, 1)`,
  height: `610px`,
  width: data.currentVariant === 'ScreensMobile' ? 'unset' : `980px`,
  margin: `18px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'ScreensMobile' ? `stretch` : 'unset',
}));

const DiscoverSec = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/Web3_Discover_Sec.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: data.currentVariant === 'ScreensTablet' ? `center` : `flex-start`,
  padding:
    data.currentVariant === 'ScreensTablet'
      ? `0px 50px`
      : data.currentVariant === 'ScreensMobile'
      ? `0px 30px`
      : `90px 180px 0px 180px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `30px 0px 0px 0px`,
}));

const Frame1275 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'ScreensTablet'
      ? `flex-start`
      : data.currentVariant === 'ScreensMobile'
      ? `flex-start`
      : `center`,
  padding:
    data.currentVariant === 'ScreensTablet'
      ? `0px 70px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `0px`
      : `0px 100px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'ScreensTablet' ? 'unset' : `stretch`,
  margin: `0px`,
  width: data.currentVariant === 'ScreensTablet' ? `668px` : 'unset',
}));

const Frame1262 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Subtitle6 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon6 = styled('img')({
  height: `14px`,
  width: `12.95px`,
  margin: `0px`,
});

const NeoFromQuestAiEm6 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: data.currentVariant === 'ScreensMobile' ? 'unset' : `385.7px`,
  margin: `0px 0px 0px 6px`,
}));

const DiscoverThe4Span1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreensTablet'
      ? `56px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreensTablet'
      ? `52px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const DiscoverThe4Span2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreensTablet'
      ? `56px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreensTablet'
      ? `52px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const DiscoverThe4Span3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreensTablet'
      ? `56px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreensTablet'
      ? `52px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const DiscoverThe4 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreensTablet'
      ? `56px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreensTablet'
      ? `52px`
      : data.currentVariant === 'ScreensMobile'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  alignSelf:
    data.currentVariant === 'ScreensTablet'
      ? 'unset'
      : data.currentVariant === 'ScreensMobile'
      ? 'unset'
      : `stretch`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `20px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `18px 0px 0px 0px`
      : `24px 0px 0px 0px`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `598px`
      : data.currentVariant === 'ScreensMobile'
      ? `300px`
      : 'unset',
}));

const ImportYourDifferen3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreensMobile' ? `26px` : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `598px`
      : data.currentVariant === 'ScreensMobile'
      ? `315px`
      : `622.49px`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `20px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `18px 0px 0px 0px`
      : `24px 0px 0px 0px`,
}));

const LearnMore1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreensTablet'
      ? `598px`
      : data.currentVariant === 'ScreensMobile'
      ? `315px`
      : `980px`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `20px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `18px 0px 0px 0px`
      : `24px 0px 0px 0px`,
}));

const About1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Link2 = styled(Link, {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'ScreensMobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
}));

const ButtonOutlined1 = styled(Button, {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `20px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `18px 0px 0px 0px`
      : `24px 0px 0px 0px`,
}));

const BtmImage = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreensTablet'
      ? `50px 0px 0px 0px`
      : data.currentVariant === 'ScreensMobile'
      ? `20px 0px 0px 0px`
      : `30px 0px 0px 0px`,
}));

const Sec4Image = styled('div')({
  backgroundImage: `url(assets/images/Web3_sec4_Image.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  height: `512px`,
  width: `1440px`,
  margin: `0px`,
});

function Web3(props) {
  const { data } = useWeb3();

  return (
    <ScreensDesktop>
      <HeroBg>
        <HeroContent data={data}>
          <HeroDesktop data={data}>
            <HeroAll data={data}>
              <HeroContent1 data={data}>
                <Frame125 data={data}>
                  <TakeDesignToLaunc data={data}>
                    {`Frontend`}
                  </TakeDesignToLaunc>
                  <TakeDesignToLaunc1 data={data}>
                    {`for your Web3 Apps`}
                  </TakeDesignToLaunc1>
                </Frame125>
                <HeroSub data={data}>
                  <NeoFromQuestAiEm data={data}>
                    {`Know React.js? Use Figma? You can build Web3 Apps using Quest. No special additional skills needed.`}
                  </NeoFromQuestAiEm>
                  <ButtonOutlined
                    variant="outlined"
                    size="large"
                    color="primary"
                    data={data}
                  >
                    {' '}
                    Sign Up Now{' '}
                  </ButtonOutlined>
                </HeroSub>
              </HeroContent1>
            </HeroAll>
          </HeroDesktop>
        </HeroContent>
      </HeroBg>
      <Sec1 data={data}>
        <Frame1251 data={data}>
          <Sec4Text data={data}>
            <Subtitle data={data}>
              <ActionsIcon
                src={`assets/images/Web3_Actions_Icon.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <NewWay data={data}>{`FRONTEND PERFECTION`}</NewWay>
            </Subtitle>
            <Frame1252 data={data}>
              <Achieve data={data}>{`Grow your  `}</Achieve>
              <Product data={data}>{`Web3 App`}</Product>
              <DevelopmentNirvana data={data}>
                {`with the best user experience`}
              </DevelopmentNirvana>
            </Frame1252>
          </Sec4Text>
          <Dashboard
            data={data}
            src={`assets/images/Web3_dashboard.png`}
            loading="lazy"
            alt={'dashboard'}
          />
        </Frame1251>
        <Divider></Divider>
        <BuildBoldPoints data={data}>
          <Frame1253 data={data}>
            <Icon1
              src={`assets/images/Web3_icon.png`}
              loading="lazy"
              alt={'icon'}
            />
            <MakeExisting data={data}>
              {`Stand out from the crowd`}
            </MakeExisting>
            <MakeExisting1 data={data}>
              {`Build a high quality experience that conveys the brand value to your customers`}
            </MakeExisting1>
          </Frame1253>
          <Frame1254 data={data}>
            <Icon2
              src={`assets/images/Web3_icon_1.png`}
              loading="lazy"
              alt={'icon'}
            />
            <BuildConsistently data={data}>{`Build trust`}</BuildConsistently>
            <BuildConsistently1 data={data}>
              {`A professional, best-in-class user experience builds credibility and increases engagement`}
            </BuildConsistently1>
          </Frame1254>
          <Frame1255 data={data}>
            <Icon3
              src={`assets/images/Web3_icon_2.png`}
              loading="lazy"
              alt={'icon'}
            />
            <IterateBetween data={data}>{`Iterate easily`}</IterateBetween>
            <IterateBetween1 data={data}>
              {`Experiment, and A/B test as easily as prototyping`}
            </IterateBetween1>
          </Frame1255>
        </BuildBoldPoints>
      </Sec1>
      <Sec2 data={data}>
        <Frame1256 data={data}>
          <Sec4Text1 data={data}>
            <Subtitle1>
              <ActionsIcon1
                src={`assets/images/Web3_Actions_Icon_1.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <NewWay1>{`COMPLIMENT YOUR SKILLs`}</NewWay1>
            </Subtitle1>
            <Frame1257 data={data}>
              <Frame1258 data={data}>
                <TakeDesignToLaunc2 data={data}>
                  {`Build Fast`}
                </TakeDesignToLaunc2>
              </Frame1258>
              <TakeDesignToLaunc3 data={data}>
                {`with the tools & frameworks that you already know and love`}
              </TakeDesignToLaunc3>
            </Frame1257>
            {false && (
              <NeoFromQuestAiEm1>
                {`Build as fast as you can design it. Building has never been this easy, detailed and fast.`}
              </NeoFromQuestAiEm1>
            )}
          </Sec4Text1>
          <FigmaToReactWithMui
            data={data}
            src={`assets/images/Web3_Figma_to_React_with_MUI.png`}
            loading="lazy"
            alt={'Figma to React with MUI'}
          />
        </Frame1256>
        {!(data.currentVariant === 'ScreensMobile') && (
          <Divider1 data={data}></Divider1>
        )}
        <BuildBoldPoints1 data={data}>
          <Frame1259 data={data}>
            <Icon4
              src={`assets/images/Web3_icon_3.png`}
              loading="lazy"
              alt={'icon'}
            />
            <MakeExisting2 data={data}>{`Design tool`}</MakeExisting2>
            <MakeExisting3 data={data}>
              {`Design in Figma, just like you did for Web2, and Quest figures out your design.`}
            </MakeExisting3>
          </Frame1259>
          <Frame12510 data={data}>
            <Icon5
              src={`assets/images/Web3_icon_4.png`}
              loading="lazy"
              alt={'icon'}
            />
            <BuildConsistently2 data={data}>{`Code format`}</BuildConsistently2>
            <BuildConsistently3 data={data}>
              {`Export React.js code components that are clean and efficient - just as good as hand coded. Add any custom code and extend it as much as you want.`}
            </BuildConsistently3>
          </Frame12510>
          <Frame126 data={data}>
            <Icon6
              src={`assets/images/Web3_icon_5.png`}
              loading="lazy"
              alt={'icon'}
            />
            <IterateBetween2 data={data}>{`Deploy and launch`}</IterateBetween2>
            <IterateBetween3 data={data}>
              {`Use your own CI/CD pipeline just like you do today.`}
            </IterateBetween3>
          </Frame126>
        </BuildBoldPoints1>
      </Sec2>
      <Sec3 data={data}>
        <Frame127 data={data}>
          <Subtitle2>
            <ActionsIcon2
              src={`assets/images/Web3_Actions_Icon_2.png`}
              loading="lazy"
              alt={'Actions Icon'}
            />
            <NeoFromQuestAiEm2>{`THE FUTURE of WEB3`}</NeoFromQuestAiEm2>
          </Subtitle2>
          <DiscoverThe data={data}>{`Build Apps for:`}</DiscoverThe>
          <Examples data={data}>
            <Frame12511 data={data}>
              <Rectangle178 data={data}></Rectangle178>
              <ImportYourDifferen data={data}>{`NFT`}</ImportYourDifferen>
            </Frame12511>
            <Frame1261 data={data}>
              <Rectangle1781 data={data}></Rectangle1781>
              <ImportYourDifferen1 data={data}>{`Defi`}</ImportYourDifferen1>
            </Frame1261>
            <Frame1271 data={data}>
              <Rectangle1782 data={data}></Rectangle1782>
              <ImportYourDifferen2 data={data}>
                {`Portfolio 
Management`}
              </ImportYourDifferen2>
            </Frame1271>
          </Examples>
        </Frame127>
      </Sec3>
      <Sec6 data={data}>
        <Frame171 data={data}>
          <Frame1272 data={data}>
            <Subtitle3>
              <ActionsIcon3
                src={`assets/images/Web3_Actions_Icon_3.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <NeoFromQuestAiEm3>{`FOCUS ON COMPOSABILITY`}</NeoFromQuestAiEm3>
            </Subtitle3>
            <DiscoverThe1 data={data}>
              {data.currentVariant === 'ScreensTablet'
                ? `We are bringing composability to web3 by porting the best of web2`
                : `We are bringing composability to Web3 by porting the best of Web2`}
            </DiscoverThe1>
            <Chart1
              data={data}
              src={`assets/images/Web3_chart_1.png`}
              loading="lazy"
              alt={'chart 1'}
            />
          </Frame1272>
        </Frame171>
      </Sec6>
      <Sec7 data={data}>
        <Frame1711 data={data}>
          <Frame1273 data={data}>
            <Subtitle4>
              <ActionsIcon4
                src={`assets/images/Web3_Actions_Icon_4.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <NeoFromQuestAiEm4>{`JOIN US`}</NeoFromQuestAiEm4>
            </Subtitle4>
            <DiscoverThe2 data={data}>{`We’re on Discord`}</DiscoverThe2>
            <Frame12512 data={data}>
              <Chart11 data={data}></Chart11>
            </Frame12512>
            <LearnMore data={data}>
              <Link1 href="#" underline="hover" data={data}>
                Connect with us
              </Link1>
              <About data={data}>
                {`on Discord and join a growing community of frontend Web3 enthusiasts.`}
              </About>
            </LearnMore>
          </Frame1273>
        </Frame1711>
      </Sec7>
      {false && (
        <ReadyVid data={data}>
          <Frame1274>
            <Frame12513 data={data}>
              <Subtitle5>
                <ActionsIcon5
                  src={`assets/images/Web3_Actions_Icon_5.png`}
                  loading="lazy"
                  alt={'Actions Icon'}
                />
                <NeoFromQuestAiEm5>{`JOIN THE FUTURE`}</NeoFromQuestAiEm5>
              </Subtitle5>
              <DiscoverThe3 data={data}>
                <DiscoverThe3Span1
                  data={data}
                >{`Ready for the `}</DiscoverThe3Span1>
                <DiscoverThe3Span2 data={data}>{`Future`}</DiscoverThe3Span2>
                <DiscoverThe3Span3
                  data={data}
                >{` of Frontend for Web3?`}</DiscoverThe3Span3>
              </DiscoverThe3>
              <Typeform data={data}></Typeform>
            </Frame12513>
          </Frame1274>
        </ReadyVid>
      )}
      <DiscoverSec data={data}>
        <Frame1275 data={data}>
          <Frame1262>
            <Subtitle6>
              <ActionsIcon6
                src={`assets/images/Web3_Actions_Icon_6.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <NeoFromQuestAiEm6 data={data}>
                {`JOIN THE FUTURE`}
              </NeoFromQuestAiEm6>
            </Subtitle6>
            <DiscoverThe4 data={data}>
              <DiscoverThe4Span1 data={data}>{`Join the `}</DiscoverThe4Span1>
              <DiscoverThe4Span2 data={data}>{`future`}</DiscoverThe4Span2>
              <DiscoverThe4Span3
                data={data}
              >{` & build Web3 products at rapid speed`}</DiscoverThe4Span3>
            </DiscoverThe4>
            <ImportYourDifferen3 data={data}>
              {data.currentVariant === 'ScreensTablet'
                ? `The nocode movement is helping companies of all sizes remove redundant work. Quest enables you to build software products faster and true to design.`
                : data.currentVariant === 'ScreensMobile'
                ? `The nocode movement is helping companies of all sizes remove redundant work. Quest enables you to build software products faster and true to design.`
                : `The low-code movement is helping companies of all sizes remove redundant work. Quest enables you to build software products faster and go to market faster than ever.`}
            </ImportYourDifferen3>
            <LearnMore1 data={data}>
              <About1 data={data}>{`Check out our`}</About1>
              <Link2 href="#" underline="hover" data={data}>
                sample projects.
              </Link2>
            </LearnMore1>
            <ButtonOutlined1
              variant="outlined"
              size="large"
              color="primary"
              data={data}
            >
              {' '}
              Sign Up Now{' '}
            </ButtonOutlined1>
          </Frame1262>
        </Frame1275>
      </DiscoverSec>
      <BtmImage data={data}>
        <Sec4Image></Sec4Image>
      </BtmImage>
    </ScreensDesktop>
  );
}

export default Web3;
