/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button, Link } from '@mui/material';
import { styled } from '@mui/material/styles';
import useXdSketchUsers from 'components/XdSketchUsers/useXdSketchUsers';

const Property1Desktop = styled('div')({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
});

const HeroBg = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1Tablet' ? `10px 0px 0px 0px` : `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `1440px`,
  margin: `0px`,
  overflow: `hidden`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const HeroContent = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1Tablet'
      ? `10px 0px 0px 0px`
      : `40px 0px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const HeroDesktop = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1Tablet'
      ? `80px 50px 0px 9px`
      : data.currentVariant === 'Property1Mobile'
      ? `30px 50px 0px 9px`
      : `80px 180px 0px 130px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const HeroAll = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'Property1Tablet' ? 'unset' : `stretch`,
  margin: `0px`,
  width: data.currentVariant === 'Property1Tablet' ? `709px` : 'unset',
}));

const ActionsIcon = styled('img')({
  height: `34px`,
  width: `34px`,
  margin: `0px`,
});

const HeroContent1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 140px 0px 0px`,
  boxSizing: `border-box`,
  flexGrow:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `1`,
  margin: `0px 0px 0px 14px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? `661px`
      : data.currentVariant === 'Property1Mobile'
      ? `268px`
      : 'unset',
}));

const Title = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1Mobile' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1Mobile' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'Property1Mobile' ? 'unset' : `stretch`,
  height: data.currentVariant === 'Property1Mobile' ? 'unset' : `67px`,
  margin: `0px`,
}));

const Xd = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1Mobile' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  width: data.currentVariant === 'Property1Tablet' ? `208px` : 'unset',
}));

const Image3 = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: data.currentVariant === 'Property1Mobile' ? `35px` : `63.34px`,
  width: data.currentVariant === 'Property1Mobile' ? `36px` : `65px`,
  objectFit: `cover`,
  margin: `0px`,
}));

const Xd1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1Tablet'
      ? `60px`
      : data.currentVariant === 'Property1Mobile'
      ? `42px`
      : `72px`,
  letterSpacing: data.currentVariant === 'Property1Mobile' ? `-1px` : `-3px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1Mobile' ? `36px` : `74px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Property1Mobile'
      ? `0px 0px 0px 8px`
      : `0px 0px 0px 10px`,
}));

const And = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1Tablet'
      ? `60px`
      : data.currentVariant === 'Property1Mobile'
      ? `42px`
      : `72px`,
  letterSpacing: `-3px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1Mobile' ? `36px` : `74px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Property1Mobile'
      ? `0px 0px 0px 8px`
      : `0px 0px 0px 10px`,
}));

const Sketch = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1Mobile' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin:
    data.currentVariant === 'Property1Mobile'
      ? `10px 0px 0px 0px`
      : `0px 0px 0px 10px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? `405px`
      : data.currentVariant === 'Property1Mobile'
      ? `287px`
      : 'unset',
}));

const Image2 = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: data.currentVariant === 'Property1Mobile' ? `32px` : `58px`,
  width: data.currentVariant === 'Property1Mobile' ? `35px` : `63px`,
  objectFit: `cover`,
  margin: `0px`,
}));

const Sketch1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1Tablet'
      ? `60px`
      : data.currentVariant === 'Property1Mobile'
      ? `42px`
      : `72px`,
  letterSpacing: data.currentVariant === 'Property1Mobile' ? `-1px` : `-3px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1Mobile' ? `36px` : `74px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'Property1Mobile'
      ? `0px 0px 0px 8px`
      : `0px 0px 0px 10px`,
  width: data.currentVariant === 'Property1Tablet' ? `332px` : 'unset',
  flexGrow: data.currentVariant === 'Property1Mobile' ? `1` : 'unset',
}));

const SubSection = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent:
    data.currentVariant === 'Property1Tablet' ? `center` : `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1Tablet'
      ? `0px 96px 0px 46px`
      : data.currentVariant === 'Property1Mobile'
      ? `0px 0px 0px 46px`
      : `0px 46px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `stretch`,
  margin: `20px 0px 0px 0px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? `709px`
      : data.currentVariant === 'Property1Mobile'
      ? `316px`
      : 'unset',
}));

const QuestIsFigmaOnly = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'Property1Mobile' ? `700` : `600`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1Tablet'
      ? `28px`
      : data.currentVariant === 'Property1Mobile'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? `270px`
      : `686px`,
  margin: `0px`,
  flexGrow: data.currentVariant === 'Property1Tablet' ? `1` : 'unset',
}));

const Xd2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1Tablet'
      ? `50px`
      : data.currentVariant === 'Property1Mobile'
      ? `50px 14px`
      : `50px 180px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'Property1Tablet' ? 'unset' : `stretch`,
  margin: `10px 0px 0px 0px`,
  width: data.currentVariant === 'Property1Tablet' ? `768px` : 'unset',
}));

const Box = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  border: `2px solid rgba(46, 46, 46, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `40px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? `347px`
      : `1080px`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1Tablet' ? `stretch` : 'unset',
}));

const Compare = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Top = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1Mobile' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const LeftSide = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1Mobile' ? `stretch` : 'unset',
}));

const Subtitle = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1Mobile' ? `stretch` : 'unset',
}));

const ActionsIcon1 = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const NewWay = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: data.currentVariant === 'Property1Mobile' ? 'unset' : `417px`,
  margin: `0px 0px 0px 8px`,
}));

const TryItHeadline = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 20px 0px`,
  boxSizing: `border-box`,
  margin: `20px 0px 0px 0px`,
  alignSelf: data.currentVariant === 'Property1Mobile' ? `stretch` : 'unset',
}));

const SeeHow = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1Mobile' ? `stretch` : 'unset',
}));

const Frame125 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const TakeDesignToLaunc = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `32px` : `44px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1Mobile' ? `34px` : `42px`,
  textTransform: `none`,
  margin: `0px`,
}));

const TakeDesignToLaunc1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `32px` : `44px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1Mobile' ? `36px` : `50px`,
  textTransform: `none`,
  background:
    data.currentVariant === 'Property1Mobile'
      ? `linear-gradient(-90deg, rgba(254, 136, 136, 1) 27.162295143312438%, rgba(128, 102, 255, 1) 97.86200295926109%)`
      : `linear-gradient(-90deg, rgba(254, 136, 136, 1) 27.16229514331244%, rgba(128, 102, 255, 1) 97.86200295926109%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: `0px`,
}));

const LearnMore = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `429px`,
  margin: `18px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const About = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'Property1Mobile' ? `700` : `600`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1Mobile' ? `22px` : `26px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? `413px`
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `429px`,
  margin: `0px`,
  flexGrow: data.currentVariant === 'Property1Mobile' ? `1` : 'unset',
}));

const RightSide = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1Tablet' ? `column` : `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? `267px`
      : `537px`,
  height:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `120px`,
  margin:
    data.currentVariant === 'Property1Mobile'
      ? `24px 0px 0px 0px`
      : `0px 0px 0px 24px`,
  alignSelf: data.currentVariant === 'Property1Tablet' ? `stretch` : 'unset',
  flexGrow: data.currentVariant === 'Property1Tablet' ? `1` : 'unset',
}));

const Image1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  borderRadius: `8px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `8px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'Property1Tablet' ? 'unset' : `stretch`,
  flexGrow:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `1`,
  margin: `0px`,
  overflow: `hidden`,
  height: data.currentVariant === 'Property1Tablet' ? `81px` : 'unset',
  width:
    data.currentVariant === 'Property1Tablet'
      ? `125px`
      : data.currentVariant === 'Property1Mobile'
      ? `96.5px`
      : 'unset',
}));

const Thumb = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/XDSketchUsers_thumb.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `stretch`,
  flexGrow:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `1`,
  margin: `0px`,
  height:
    data.currentVariant === 'Property1Tablet'
      ? `65px`
      : data.currentVariant === 'Property1Mobile'
      ? `47px`
      : 'unset',
  width:
    data.currentVariant === 'Property1Tablet'
      ? `109px`
      : data.currentVariant === 'Property1Mobile'
      ? `53px`
      : 'unset',
}));

const ArrowRight = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: data.currentVariant === 'Property1Mobile' ? `39px` : `54px`,
  width: data.currentVariant === 'Property1Mobile' ? `26px` : `37px`,
  margin:
    data.currentVariant === 'Property1Tablet'
      ? `24px 0px 0px 0px`
      : `0px 0px 0px 24px`,
}));

const ArrowDown = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: `21px`,
  width: `42px`,
  margin:
    data.currentVariant === 'Property1Tablet'
      ? `24px 0px 0px 0px`
      : `0px 0px 0px 24px`,
}));

const Image4 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `10px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'Property1Tablet' ? 'unset' : `stretch`,
  flexGrow:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `1`,
  margin:
    data.currentVariant === 'Property1Tablet'
      ? `24px 0px 0px 0px`
      : `0px 0px 0px 24px`,
  overflow: `hidden`,
  height: data.currentVariant === 'Property1Tablet' ? `85px` : 'unset',
  width:
    data.currentVariant === 'Property1Tablet'
      ? `125px`
      : data.currentVariant === 'Property1Mobile'
      ? `96.5px`
      : 'unset',
}));

const Thumb1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/XDSketchUsers_thumb_1.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `stretch`,
  flexGrow:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `1`,
  margin: `0px`,
  height:
    data.currentVariant === 'Property1Tablet'
      ? `65px`
      : data.currentVariant === 'Property1Mobile'
      ? `47px`
      : 'unset',
  width:
    data.currentVariant === 'Property1Tablet'
      ? `105px`
      : data.currentVariant === 'Property1Mobile'
      ? `50px`
      : 'unset',
}));

const Divider = styled('div')({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `2px`,
  margin: `24px 0px 0px 0px`,
});

const Mid = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'Property1Tablet'
      ? `column`
      : data.currentVariant === 'Property1Mobile'
      ? `column`
      : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `24px 0px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `24px 0px 0px 0px`,
}));

const XdToFigma = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? `586px`
      : data.currentVariant === 'Property1Mobile'
      ? `270px`
      : 'unset',
}));

const Magicul = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/XDSketchUsers_magicul.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  height:
    data.currentVariant === 'Property1Tablet'
      ? `307px`
      : data.currentVariant === 'Property1Mobile'
      ? `141px`
      : `358px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `682px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const SketchDirections = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `1`,
  margin:
    data.currentVariant === 'Property1Tablet'
      ? `24px 0px 0px 0px`
      : data.currentVariant === 'Property1Mobile'
      ? `24px 0px 0px 0px`
      : `0px 0px 0px 24px`,
}));

const AddSketch = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'Property1Mobile' ? `700` : `600`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1Tablet'
      ? `26px`
      : data.currentVariant === 'Property1Mobile'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  flexGrow: `1`,
  margin: `0px`,
}));

const Divider1 = styled('div')({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `2px`,
  margin: `24px 0px 0px 0px`,
});

const Bottom = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1Mobile' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1Mobile' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `24px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const About1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'Property1Mobile' ? `700` : `600`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1Tablet'
      ? `26px`
      : data.currentVariant === 'Property1Mobile'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  margin: `0px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? `378px`
      : data.currentVariant === 'Property1Mobile'
      ? `267px`
      : 'unset',
}));

const ButtonOutlined = styled(Button, {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  margin:
    data.currentVariant === 'Property1Mobile'
      ? `24px 0px 0px 0px`
      : `0px 0px 0px 24px`,
}));

const Sketch2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1Tablet'
      ? `50px`
      : data.currentVariant === 'Property1Mobile'
      ? `10px 14px 50px 14px`
      : `50px 180px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `stretch`,
  margin: `10px 0px 0px 0px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? `768px`
      : data.currentVariant === 'Property1Mobile'
      ? `375px`
      : 'unset',
}));

const Box1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  border: `2px solid rgba(46, 46, 46, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `40px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `1080px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const Compare1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const Top1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1Mobile' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'Property1Mobile' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const LeftSide1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Subtitle1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon2 = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const NewWay1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: data.currentVariant === 'Property1Mobile' ? 'unset' : `417px`,
  margin: `0px 0px 0px 8px`,
}));

const TryItHeadline1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 20px 0px`,
  boxSizing: `border-box`,
  margin: `20px 0px 0px 0px`,
});

const SeeHow1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Frame1251 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const TakeDesignToLaunc2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `32px` : `44px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1Mobile' ? `34px` : `42px`,
  textTransform: `none`,
  margin: `0px`,
}));

const TakeDesignToLaunc3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `32px` : `44px`,
  letterSpacing: `-2px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1Mobile' ? `36px` : `50px`,
  textTransform: `none`,
  background:
    data.currentVariant === 'Property1Mobile'
      ? `linear-gradient(-90deg, rgba(254, 136, 136, 1) 27.162295143312438%, rgba(128, 102, 255, 1) 97.86200295926109%)`
      : `linear-gradient(-90deg, rgba(254, 136, 136, 1) 27.16229514331244%, rgba(128, 102, 255, 1) 97.86200295926109%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: `0px`,
}));

const LearnMore1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `18px 0px 0px 0px`,
});

const About2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'Property1Mobile' ? `700` : `600`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `16px` : `20px`,
  letterSpacing:
    data.currentVariant === 'Property1Mobile'
      ? `-0.6000000238418579px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1Tablet'
      ? `26px`
      : data.currentVariant === 'Property1Mobile'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  margin: `0px`,
}));

const RightSide1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1Tablet' ? `column` : `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? `267px`
      : `537px`,
  height:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `120px`,
  margin:
    data.currentVariant === 'Property1Mobile'
      ? `24px 0px 0px 0px`
      : `0px 0px 0px 24px`,
  alignSelf: data.currentVariant === 'Property1Tablet' ? `stretch` : 'unset',
  flexGrow: data.currentVariant === 'Property1Tablet' ? `1` : 'unset',
}));

const Image5 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  borderRadius: `8px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `8px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `stretch`,
  flexGrow: data.currentVariant === 'Property1Tablet' ? 'unset' : `1`,
  margin: `0px`,
  overflow: `hidden`,
  height: data.currentVariant === 'Property1Tablet' ? `77.5px` : 'unset',
  width: data.currentVariant === 'Property1Tablet' ? `125px` : 'unset',
}));

const Thumb2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/XDSketchUsers_thumb_2.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `stretch`,
  flexGrow:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `1`,
  margin: `0px`,
  height:
    data.currentVariant === 'Property1Tablet'
      ? `61.5px`
      : data.currentVariant === 'Property1Mobile'
      ? `47px`
      : 'unset',
  width:
    data.currentVariant === 'Property1Tablet'
      ? `109px`
      : data.currentVariant === 'Property1Mobile'
      ? `75px`
      : 'unset',
}));

const ArrowRight1 = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: data.currentVariant === 'Property1Mobile' ? `39px` : `54px`,
  width: data.currentVariant === 'Property1Mobile' ? `26px` : `37px`,
  margin:
    data.currentVariant === 'Property1Tablet'
      ? `24px 0px 0px 0px`
      : `0px 0px 0px 24px`,
}));

const ArrowDown1 = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: `21px`,
  width: `42px`,
  margin:
    data.currentVariant === 'Property1Tablet'
      ? `24px 0px 0px 0px`
      : `0px 0px 0px 24px`,
}));

const Image6 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `10px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `stretch`,
  flexGrow: data.currentVariant === 'Property1Tablet' ? 'unset' : `1`,
  margin:
    data.currentVariant === 'Property1Tablet'
      ? `24px 0px 0px 0px`
      : `0px 0px 0px 24px`,
  overflow: `hidden`,
  height: data.currentVariant === 'Property1Tablet' ? `77.5px` : 'unset',
  width: data.currentVariant === 'Property1Tablet' ? `125px` : 'unset',
}));

const Thumb3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/XDSketchUsers_thumb_3.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `stretch`,
  flexGrow:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `1`,
  margin: `0px`,
  height:
    data.currentVariant === 'Property1Tablet'
      ? `57.5px`
      : data.currentVariant === 'Property1Mobile'
      ? `47px`
      : 'unset',
  width:
    data.currentVariant === 'Property1Tablet'
      ? `105px`
      : data.currentVariant === 'Property1Mobile'
      ? `71px`
      : 'unset',
}));

const Divider2 = styled('div')({
  backgroundColor: `rgba(46, 46, 46, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `2px`,
  margin: `24px 0px 0px 0px`,
});

const Bottom1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `24px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const SketchToFigma = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `22px 0px 0px 0px`,
  boxSizing: `border-box`,
  height:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `254px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `998px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const SketchToFigma1 = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height:
    data.currentVariant === 'Property1Tablet'
      ? `138px`
      : data.currentVariant === 'Property1Mobile'
      ? `63px`
      : `234px`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? `588px`
      : data.currentVariant === 'Property1Mobile'
      ? `267px`
      : `994px`,
  objectFit: `cover`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'Property1Tablet' ? `stretch` : 'unset',
}));

const SketchDirections1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 197px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `24px 0px 0px 0px`,
});

const AddSketch1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.currentVariant === 'Property1Mobile' ? `700` : `600`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1Tablet'
      ? `26px`
      : data.currentVariant === 'Property1Mobile'
      ? `22px`
      : `30px`,
  textTransform: `none`,
  flexGrow: data.currentVariant === 'Property1Mobile' ? 'unset' : `1`,
  margin: `0px`,
  width: data.currentVariant === 'Property1Mobile' ? `267px` : 'unset',
}));

const DiscoverSec = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(assets/images/XDSketchUsers_Discover_Sec.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'Property1Tablet'
      ? `90px 80px 0px 80px`
      : data.currentVariant === 'Property1Mobile'
      ? `20px 30px 0px 30px`
      : `90px 180px 0px 180px`,
  boxSizing: `border-box`,
  alignSelf: data.currentVariant === 'Property1Mobile' ? 'unset' : `stretch`,
  margin: `10px 0px 0px 0px`,
  width: data.currentVariant === 'Property1Mobile' ? `375px` : 'unset',
}));

const Frame127 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'Property1Tablet'
      ? `0px`
      : data.currentVariant === 'Property1Mobile'
      ? `0px`
      : `0px 100px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame126 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
  width: data.currentVariant === 'Property1Tablet' ? `608px` : 'unset',
  alignSelf: data.currentVariant === 'Property1Mobile' ? `stretch` : 'unset',
}));

const Subtitle2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon3 = styled('img')({
  height: `14px`,
  width: `12.95px`,
  margin: `0px`,
});

const NeoFromQuestAiEm = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `385.7px`,
  margin: `0px 0px 0px 6px`,
});

const DiscoverTheSpan1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1Tablet'
      ? `56px`
      : data.currentVariant === 'Property1Mobile'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1Tablet'
      ? `52px`
      : data.currentVariant === 'Property1Mobile'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const DiscoverTheSpan2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1Tablet'
      ? `56px`
      : data.currentVariant === 'Property1Mobile'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1Tablet'
      ? `52px`
      : data.currentVariant === 'Property1Mobile'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const DiscoverTheSpan3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1Tablet'
      ? `56px`
      : data.currentVariant === 'Property1Mobile'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1Tablet'
      ? `52px`
      : data.currentVariant === 'Property1Mobile'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  textAlign: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const DiscoverThe = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'Property1Tablet'
      ? `56px`
      : data.currentVariant === 'Property1Mobile'
      ? `30px`
      : `64px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'Property1Tablet'
      ? `52px`
      : data.currentVariant === 'Property1Mobile'
      ? `30px`
      : `56px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `24px 0px 0px 0px`,
}));

const ImportYourDifferen = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'Property1Mobile' ? `26px` : `30px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `622.49px`,
  margin: `24px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const LearnMore2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'Property1Tablet'
      ? 'unset'
      : data.currentVariant === 'Property1Mobile'
      ? 'unset'
      : `980px`,
  margin: `24px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'Property1Tablet'
      ? `stretch`
      : data.currentVariant === 'Property1Mobile'
      ? `stretch`
      : 'unset',
}));

const About3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Link1 = styled(Link, {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.currentVariant === 'Property1Mobile' ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px 0px 0px 5px`,
}));

const ButtonOutlined1 = styled(Button)({
  margin: `24px 0px 0px 0px`,
});

const BtmImage = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `10px 0px 0px 0px`,
});

const Sec4Image = styled('div')({
  backgroundImage: `url(assets/images/XDSketchUsers_sec4_Image.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  height: `512px`,
  width: `1440px`,
  margin: `0px`,
});

function XdSketchUsers(props) {
  const { data, fns } = useXdSketchUsers();

  return (
    <Property1Desktop>
      <HeroBg data={data}>
        <HeroContent data={data}>
          <HeroDesktop data={data}>
            <HeroAll data={data}>
              <ActionsIcon
                src={`assets/images/XDSketchUsers_Actions_Icon.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <HeroContent1 data={data}>
                <Title data={data}>
                  <Xd data={data}>
                    <Image3
                      data={data}
                      src={`assets/images/XDSketchUsers_image_3.png`}
                      loading="lazy"
                      alt={'image 3'}
                    />
                    <Xd1 data={data}>{`XD`}</Xd1>
                    <And data={data}>{`&`}</And>
                  </Xd>
                  <Sketch data={data}>
                    <Image2
                      data={data}
                      src={`assets/images/XDSketchUsers_image_2.png`}
                      loading="lazy"
                      alt={'image 2'}
                    />
                    <Sketch1 data={data}>{`Sketch users`}</Sketch1>
                  </Sketch>
                </Title>
              </HeroContent1>
            </HeroAll>
            <SubSection data={data}>
              <QuestIsFigmaOnly data={data}>
                {'Quest currently only works using the Quest plugin for Figma.'}
              </QuestIsFigmaOnly>
            </SubSection>
          </HeroDesktop>
        </HeroContent>
      </HeroBg>
      <Xd2 data={data}>
        <Box data={data}>
          <Compare>
            <Top data={data}>
              <LeftSide data={data}>
                <Subtitle data={data}>
                  <ActionsIcon1
                    src={`assets/images/XDSketchUsers_Actions_Icon_1.png`}
                    loading="lazy"
                    alt={'Actions Icon'}
                  />
                  <NewWay data={data}>{`IMPORT SKETCH`}</NewWay>
                </Subtitle>
                <TryItHeadline data={data}>
                  <SeeHow data={data}>
                    <Frame125>
                      <TakeDesignToLaunc data={data}>
                        {`Adobe XD to`}
                      </TakeDesignToLaunc>
                      <TakeDesignToLaunc1 data={data}>
                        {`Figma`}
                      </TakeDesignToLaunc1>
                    </Frame125>
                  </SeeHow>
                  <LearnMore data={data}>
                    <About data={data}>
                      {`Figma does not natively allows you to import a XD file to convert it into a Figma file. We recommend using the industry leading design conversion tool: Magicul.`}
                    </About>
                  </LearnMore>
                </TryItHeadline>
              </LeftSide>
              <RightSide data={data}>
                <Image1 data={data}>
                  <Thumb data={data}></Thumb>
                </Image1>
                {!(data.currentVariant === 'Property1Tablet') && (
                  <ArrowRight
                    data={data}
                    src={`assets/images/XDSketchUsers_arrow_right.png`}
                    loading="lazy"
                    alt={'arrow right'}
                  />
                )}
                {data.currentVariant === 'Property1Tablet' && (
                  <ArrowDown
                    data={data}
                    src={`assets/images/XDSketchUsers_arrow_down.png`}
                    loading="lazy"
                    alt={'arrow down'}
                  />
                )}
                <Image4 data={data}>
                  <Thumb1 data={data}></Thumb1>
                </Image4>
              </RightSide>
            </Top>
            <Divider></Divider>
            <Mid data={data}>
              <XdToFigma data={data}>
                <Magicul data={data}></Magicul>
              </XdToFigma>
              <SketchDirections data={data}>
                <AddSketch data={data}>
                  {`Simply import your import your XD file into their system and get a .Fig file to download and import into Figma.

Magicul will convert all parts of the visual design but also includes symbols, text and color styles & effects. Save up to 40h per file. `}
                </AddSketch>
              </SketchDirections>
            </Mid>
            <Divider1></Divider1>
            <Bottom data={data}>
              <About1 data={data}>
                {`We’ve used it to convert all our older Quest XD design files and highly recommend it.`}
              </About1>
              <ButtonOutlined
                variant="outlined"
                size="large"
                color="primary"
                onClick={fns.handleBtnClick}
                data={data}
              >
                {' '}
                Convert Now{' '}
              </ButtonOutlined>
            </Bottom>
          </Compare>
        </Box>
      </Xd2>
      <Sketch2 data={data}>
        <Box1 data={data}>
          <Compare1>
            <Top1 data={data}>
              <LeftSide1>
                <Subtitle1>
                  <ActionsIcon2
                    src={`assets/images/XDSketchUsers_Actions_Icon_2.png`}
                    loading="lazy"
                    alt={'Actions Icon'}
                  />
                  <NewWay1 data={data}>{`IMPORT SKETCH`}</NewWay1>
                </Subtitle1>
                <TryItHeadline1>
                  <SeeHow1>
                    <Frame1251>
                      <TakeDesignToLaunc2 data={data}>
                        {`Sketch to`}
                      </TakeDesignToLaunc2>
                      <TakeDesignToLaunc3 data={data}>
                        {`Figma`}
                      </TakeDesignToLaunc3>
                    </Frame1251>
                  </SeeHow1>
                  <LearnMore1>
                    <About2 data={data}>
                      {`Figma natively allows you to import a
Sketch file to convert it into a Figma file.`}
                    </About2>
                  </LearnMore1>
                </TryItHeadline1>
              </LeftSide1>
              <RightSide1 data={data}>
                <Image5 data={data}>
                  <Thumb2 data={data}></Thumb2>
                </Image5>
                {!(data.currentVariant === 'Property1Tablet') && (
                  <ArrowRight1
                    data={data}
                    src={`assets/images/XDSketchUsers_arrow_right_1.png`}
                    loading="lazy"
                    alt={'arrow right'}
                  />
                )}
                {data.currentVariant === 'Property1Tablet' && (
                  <ArrowDown1
                    data={data}
                    src={`assets/images/XDSketchUsers_arrow_down_1.png`}
                    loading="lazy"
                    alt={'arrow down'}
                  />
                )}
                <Image6 data={data}>
                  <Thumb3 data={data}></Thumb3>
                </Image6>
              </RightSide1>
            </Top1>
            <Divider2></Divider2>
            <Bottom1 data={data}>
              <SketchToFigma data={data}>
                <SketchToFigma1
                  data={data}
                  src={`assets/images/XDSketchUsers_sketch_to_figma_1.png`}
                  loading="lazy"
                  alt={'sketch_to_figma 1'}
                />
              </SketchToFigma>
              <SketchDirections1>
                <AddSketch1 data={data}>
                  {`To add a Sketch file and convert it into a Figma file, simply choose the “Import file” option located in the Recents tab in Figma.`}
                </AddSketch1>
              </SketchDirections1>
            </Bottom1>
          </Compare1>
        </Box1>
      </Sketch2>
      <DiscoverSec data={data}>
        <Frame127 data={data}>
          <Frame126 data={data}>
            <Subtitle2>
              <ActionsIcon3
                src={`assets/images/XDSketchUsers_Actions_Icon_3.png`}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <NeoFromQuestAiEm>{`THE FUTURE of frontend`}</NeoFromQuestAiEm>
            </Subtitle2>
            <DiscoverThe data={data}>
              <DiscoverTheSpan1 data={data}>{`Join the `}</DiscoverTheSpan1>
              <DiscoverTheSpan2 data={data}>{`future`}</DiscoverTheSpan2>
              <DiscoverTheSpan3
                data={data}
              >{` & build products at rapid speed`}</DiscoverTheSpan3>
            </DiscoverThe>
            <ImportYourDifferen data={data}>
              {`The low-code movement is helping companies of all sizes remove redundant work. Quest enables you to build software products faster and go to market faster than ever.`}
            </ImportYourDifferen>
            <LearnMore2 data={data}>
              <About3 data={data}>{`Check out our`}</About3>
              <Link1 href="#" underline="hover" data={data}>
                sample projects.
              </Link1>
            </LearnMore2>
            <ButtonOutlined1
              variant="outlined"
              size="large"
              color="primary"
              onClick={fns.onSignupClick}
            >
              {' '}
              Sign Up Now{' '}
            </ButtonOutlined1>
          </Frame126>
        </Frame127>
      </DiscoverSec>
      <BtmImage>
        <Sec4Image></Sec4Image>
      </BtmImage>
    </Property1Desktop>
  );
}

export default XdSketchUsers;
