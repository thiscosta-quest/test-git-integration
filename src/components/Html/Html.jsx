/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button } from '@mui/material';
import ActionsIconImage from 'src/assets/images/HTML_Actions_Icon_1.png';
import ActionsIcon1Image from 'src/assets/images/HTML_Actions_Icon.png';
import { styled } from '@mui/material/styles';
import HeroDImageImage from 'src/assets/images/HTML_hero___d.png';
import HeroImageImage from 'src/assets/images/HTML_hero.png';
import Pic2ImageImage from 'src/assets/images/HTML_pic2_1.png';
import Pic21ImageImage from 'src/assets/images/HTML_pic2.png';
import Pic3ImageImage from 'src/assets/images/HTML_pic3.png';
import useHtml from 'src/components/Html/useHtml';

const Property1HtmlD = styled('div')({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
});

const Page = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const HeroD = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(${HeroDImageImage})`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.isTablet
    ? `50px 8px 54px 32px`
    : data.isMobile
    ? `50px 8px 54px 8px`
    : `80px 8px 54px 132px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  height: data.isTablet ? 'unset' : data.isMobile ? 'unset' : `769px`,
  margin: data.isTablet
    ? `50px 0px 0px 0px`
    : data.isMobile
    ? `50px 0px 0px 0px`
    : `0px`,
  overflow: `hidden`,
}));

const HeroAll = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ActionsIcon = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: data.isMobile ? `24px` : `49px`,
  width: data.isMobile ? `24px` : `49px`,
  margin: `0px`,
}));

const HeroContent = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px 0px 0px 3px`,
});

const HeroTxt = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `60px` : data.isMobile ? `36px` : `78px`,
  letterSpacing: data.isMobile ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `56px` : data.isMobile ? `37px` : `72px`,
  textTransform: `none`,
  margin: `0px`,
  alignSelf: data.isTablet ? `stretch` : data.isMobile ? `stretch` : 'unset',
}));

const HeroSub = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: data.isMobile ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `28px` : data.isMobile ? `26px` : `30px`,
  textTransform: `none`,
  width: data.isTablet ? `468px` : data.isMobile ? `243px` : `400px`,
  margin: `25px 0px 0px 0px`,
}));

const ButtonOutlined = styled(Button)({
  margin: `25px 0px 0px 0px`,
});

const Hero = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(${HeroImageImage})`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.isTablet
    ? `50px 8px 54px 32px`
    : data.isMobile
    ? `50px 8px 54px 8px`
    : `50px 8px 54px 132px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: data.isTablet ? `0px` : data.isMobile ? `0px` : `50px 0px 0px 0px`,
  overflow: `hidden`,
}));

const HeroAll1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ActionsIcon1 = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: data.isMobile ? `24px` : `49px`,
  width: data.isMobile ? `24px` : `49px`,
  margin: `0px`,
}));

const HeroContent1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px 0px 0px 3px`,
});

const HeroTxt1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `60px` : data.isMobile ? `36px` : `78px`,
  letterSpacing: data.isMobile ? `-0.5px` : `-3px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `56px` : data.isMobile ? `37px` : `72px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const HeroSub1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: data.isMobile ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: `28px`,
  textTransform: `none`,
  width: data.isMobile ? `243px` : `468px`,
  margin: `25px 0px 0px 0px`,
}));

const ButtonOutlined1 = styled(Button)({
  margin: `25px 0px 0px 0px`,
});

const Benefits = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.isMobile ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.isTablet
    ? `0px 36px`
    : data.isMobile
    ? `0px 36px`
    : `0px 184px 60px 184px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const DesignWithoutLimits = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow: data.isMobile ? 'unset' : `1`,
  margin: `0px`,
}));

const DesignToLiveHtml = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `22px` : data.isMobile ? `22px` : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `22px` : data.isMobile ? `22px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ImportYourDifferen = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: data.isMobile ? `0px` : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `22px` : data.isMobile ? `26px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const ExportToCode = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow: data.isMobile ? 'unset' : `1`,
  margin: data.isMobile ? `44px 0px 0px 0px` : `0px 0px 0px 44px`,
}));

const DesignToLiveHtml1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `22px` : data.isMobile ? `22px` : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `22px` : data.isMobile ? `22px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ImportYourDifferen1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `22px` : data.isMobile ? `26px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const LaunchAndDone = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow: data.isMobile ? 'unset' : `1`,
  margin: data.isMobile ? `44px 0px 0px 0px` : `0px 0px 0px 44px`,
}));

const DesignToLiveHtml2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `22px` : data.isMobile ? `22px` : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `22px` : data.isMobile ? `22px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ImportYourDifferen2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: data.isMobile ? `0px` : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `22px` : data.isMobile ? `26px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const SecPic = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.isTablet ? `0px` : data.isMobile ? `0px` : `0px 140px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Pic2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(${Pic2ImageImage})`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: data.isTablet
    ? `79px 36px 79px 84px`
    : data.isMobile
    ? `79px 36px`
    : `79px 44px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForMarketers = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ForMarketers1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `22px` : data.isMobile ? `22px` : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `22px` : data.isMobile ? `22px` : `30px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  width: `208px`,
  margin: `0px`,
}));

const LoremIpsumForPlacCop = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.isMobile ? `700` : `600`,
  fontSize: data.isMobile ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isMobile ? `24px` : `22px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  height: `90px`,
  width: `208px`,
  margin: `8px 0px 0px 0px`,
}));

const FeaturesForDesigners = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.isMobile ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.isTablet
    ? `0px 84px`
    : data.isMobile
    ? `0px 36px`
    : `0px 184px 60px 184px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Frame124 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: data.isMobile ? 'unset' : `1`,
  margin: `0px`,
  alignSelf: data.isMobile ? `stretch` : 'unset',
}));

const RectangleCopy30 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Video = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy34 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Buttons = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy40 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Components = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy32 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Animations = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Frame125 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flexGrow: data.isMobile ? 'unset' : `1`,
  margin: data.isTablet
    ? `0px 0px 0px 30px`
    : data.isMobile
    ? `30px 0px 0px 0px`
    : `0px 0px 0px 60px`,
  alignSelf: data.isMobile ? `stretch` : 'unset',
}));

const RectangleCopy38 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const SfxMusic = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const UploadSoundAndMus = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy36 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Interactions = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx4 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy7 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const CustomFonts = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const QuestSupportsGoogl = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy18 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const ParallaxScrolling = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx5 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy23 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const TriggerWithScroll = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx6 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const SecPic1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.isTablet ? `0px` : data.isMobile ? `0px` : `0px 140px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Pic21 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(${Pic21ImageImage})`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: data.isTablet
    ? `79px 36px 79px 84px`
    : data.isMobile
    ? `79px 36px`
    : `79px 44px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForMarketers2 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ForMarketers3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `22px` : data.isMobile ? `22px` : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `22px` : data.isMobile ? `22px` : `30px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  width: data.isTablet ? `208px` : data.isMobile ? `208px` : `237px`,
  margin: `0px`,
}));

const LoremIpsumForPlacCop1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.isMobile ? `700` : `600`,
  fontSize: data.isMobile ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isMobile ? `24px` : `22px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  height: `90px`,
  width: `208px`,
  margin: `8px 0px 0px 0px`,
}));

const FeaturesForMarketers = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.isMobile ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.isTablet
    ? `0px 84px`
    : data.isMobile
    ? `0px 36px`
    : `0px 184px 50px 184px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Frame1241 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow: data.isMobile ? 'unset' : `1`,
  margin: `0px`,
}));

const RectangleCopy31 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
});

const Video1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  width: data.isMobile ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.isMobile ? `stretch` : 'unset',
}));

const Xxxxxxx7 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy35 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const Buttons1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  width: data.isMobile ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.isMobile ? `stretch` : 'unset',
}));

const Xxxxxxx8 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy41 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const Components1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  width: data.isMobile ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.isMobile ? `stretch` : 'unset',
}));

const Xxxxxxx9 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Frame1251 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow: data.isMobile ? 'unset' : `1`,
  margin: data.isTablet
    ? `0px 0px 0px 30px`
    : data.isMobile
    ? `30px 0px 0px 0px`
    : `0px 0px 0px 60px`,
}));

const RectangleCopy33 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
});

const Animations1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  width: data.isMobile ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.isMobile ? `stretch` : 'unset',
}));

const Xxxxxxx10 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy37 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const Interactions1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  width: data.isMobile ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.isMobile ? `stretch` : 'unset',
}));

const Xxxxxxx11 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy39 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
  overflow: `hidden`,
});

const SfxMusic1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  width: data.isMobile ? 'unset' : `333px`,
  margin: `0px`,
  alignSelf: data.isMobile ? `stretch` : 'unset',
}));

const UploadSoundAndMus1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const SecPic2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.isTablet ? `0px` : data.isMobile ? `0px` : `0px 140px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Pic3 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundImage: `url(${Pic3ImageImage})`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: data.isTablet
    ? `79px 36px 79px 84px`
    : data.isMobile
    ? `79px 36px`
    : `79px 44px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ForDevelopers = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: data.isTablet ? 'unset' : data.isMobile ? 'unset' : `259px`,
  margin: `0px`,
}));

const ForMarketers4 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `22px` : data.isMobile ? `22px` : `26px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `22px` : data.isMobile ? `22px` : `30px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  alignSelf: data.isTablet ? 'unset' : data.isMobile ? 'unset' : `stretch`,
  margin: `0px`,
  width: data.isTablet ? `208px` : data.isMobile ? `208px` : 'unset',
}));

const LoremIpsumForPlacCop2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: data.isMobile ? `700` : `600`,
  fontSize: data.isMobile ? `16px` : `18px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isMobile ? `24px` : `22px`,
  textTransform: `none`,
  textShadow: `0px 2px 2px rgba(0, 0, 0, 0.15)`,
  alignSelf: data.isTablet ? 'unset' : data.isMobile ? 'unset' : `stretch`,
  height: `90px`,
  margin: `8px 0px 0px 0px`,
  width: data.isTablet ? `208px` : data.isMobile ? `208px` : 'unset',
}));

const FeaturesForDeveloper = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.isMobile ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.isTablet
    ? `0px 84px`
    : data.isMobile
    ? `0px 36px`
    : `0px 184px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
}));

const Frame1242 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow: data.isMobile ? 'unset' : `1`,
  margin: `0px`,
}));

const RectangleCopy24 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Video2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx12 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy25 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Buttons2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx13 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy29 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Components2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx14 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Frame1252 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flexGrow: data.isMobile ? 'unset' : `1`,
  margin: data.isTablet
    ? `0px 0px 0px 30px`
    : data.isMobile
    ? `30px 0px 0px 0px`
    : `0px 0px 0px 60px`,
}));

const RectangleCopy27 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Animations2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx15 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy28 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const Interactions2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Xxxxxxx16 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const RectangleCopy8 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const SfxMusic2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isTablet ? `18px` : data.isMobile ? `18px` : `26px`,
  letterSpacing: data.isTablet
    ? `-0.21290338039398193px`
    : data.isMobile
    ? `-0.21290338039398193px`
    : `-1px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `20px` : data.isMobile ? `20px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const UploadSoundAndMus2 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: data.isTablet ? `16px` : data.isMobile ? `16px` : `20px`,
  letterSpacing: `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight: data.isTablet ? `24px` : data.isMobile ? `24px` : `30px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `4px 0px 0px 0px`,
}));

const Join = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `sticky`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: data.isMobile ? `0px 0px 50px 0px` : `100px 0px 150px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `50px 0px 0px 0px`,
  bottom: `0`,
  zIndex: `3000`,
}));

const JoinUsOnOurMissiSpan1 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(254, 136, 136, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isMobile ? `30px` : `38px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.isMobile ? `32px` : `40px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const JoinUsOnOurMissiSpan2 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(41, 41, 41, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isMobile ? `30px` : `38px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.isMobile ? `32px` : `40px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const JoinUsOnOurMissiSpan3 = styled('span', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isMobile ? `30px` : `38px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.isMobile ? `32px` : `40px`,
  textTransform: `none`,
  textAlign: 'unset',
  width: 'unset',
  margin: 'unset',
}));

const JoinUsOnOurMissi = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.isMobile ? `30px` : `38px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: data.isMobile ? `32px` : `40px`,
  textTransform: `none`,
  width: data.isMobile ? `305px` : `378px`,
  margin: `0px`,
}));

const ButtonOutlined2 = styled(Button)({
  margin: `18px 0px 0px 0px`,
});

function Html(props) {
  const { data } = useHtml();

  return (
    <Property1HtmlD>
      <Page>
        {!data.isTablet && !data.isMobile && (
          <HeroD data={data}>
            <HeroAll>
              <ActionsIcon
                data={data}
                src={ActionsIconImage}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <HeroContent>
                <HeroTxt data={data}>{data.testTitle2}</HeroTxt>
                <HeroSub data={data}>
                  {`Design what you want and automatically bring pixel-perfect, responsive sites to life. `}
                </HeroSub>
                <ButtonOutlined variant="outlined" size="large" color="primary">
                  {' '}
                  Build for Free{' '}
                </ButtonOutlined>
              </HeroContent>
            </HeroAll>
          </HeroD>
        )}
        {(data.isTablet || data.isMobile) && (
          <Hero data={data}>
            <HeroAll1>
              <ActionsIcon1
                data={data}
                src={ActionsIcon1Image}
                loading="lazy"
                alt={'Actions Icon'}
              />
              <HeroContent1>
                <HeroTxt1 data={data}>
                  {data.isTablet
                    ? `Convert
your design
into a launch
ready webpages`
                    : data.isMobile
                    ? `Convert
your design
into a launch
ready webpages`
                    : `Convert
your design
into a launch
ready website`}
                </HeroTxt1>
                <HeroSub1 data={data}>
                  {`Design what you want and automatically bring pixel-perfect, responsive sites to life. `}
                </HeroSub1>
                <ButtonOutlined1
                  variant="outlined"
                  size="large"
                  color="primary"
                >
                  {' '}
                  Build for Free{' '}
                </ButtonOutlined1>
              </HeroContent1>
            </HeroAll1>
          </Hero>
        )}
        <Benefits data={data}>
          <DesignWithoutLimits data={data}>
            <DesignToLiveHtml data={data}>
              {`Design without limits`}
            </DesignToLiveHtml>
            <ImportYourDifferen data={data}>
              {`Generate code that’s clean and efficient, and as good or better than hand-coded.`}
            </ImportYourDifferen>
          </DesignWithoutLimits>
          <ExportToCode data={data}>
            <DesignToLiveHtml1 data={data}>
              {`Export to code`}
            </DesignToLiveHtml1>
            <ImportYourDifferen1 data={data}>
              {`By removing the back and forth between designer and developer, your product will no longer  be just “good enough”.`}
            </ImportYourDifferen1>
          </ExportToCode>
          <LaunchAndDone data={data}>
            <DesignToLiveHtml2 data={data}>
              {`Launch and done`}
            </DesignToLiveHtml2>
            <ImportYourDifferen2 data={data}>
              {`Build exactly what your designer envisions with pixel-perfect conversion of your Figma designs.`}
            </ImportYourDifferen2>
          </LaunchAndDone>
        </Benefits>
        <SecPic data={data}>
          <Pic2 data={data}>
            <ForMarketers>
              <ForMarketers1 data={data}>{`For designers`}</ForMarketers1>
              <LoremIpsumForPlacCop data={data}>
                {`There’s no faster way for a designer to convert their designs into pixel-perfect web experiences.`}
              </LoremIpsumForPlacCop>
            </ForMarketers>
          </Pic2>
        </SecPic>
        <FeaturesForDesigners data={data}>
          <Frame124 data={data}>
            <RectangleCopy30>
              <Video data={data}>{`Bring in your designs`}</Video>
              <Xxxxxxx data={data}>
                {data.isTablet
                  ? `Design like you do today with frames in Figma.`
                  : data.isMobile
                  ? `Design like you do today with frames in Figma.`
                  : `Design like you do today using frames in Figma.`}
              </Xxxxxxx>
            </RectangleCopy30>
            <RectangleCopy34>
              <Buttons data={data}>{`Design responsively`}</Buttons>
              <Xxxxxxx1 data={data}>
                {`Quest creates break-points automatically so your experience works as expected on any screen size.`}
              </Xxxxxxx1>
            </RectangleCopy34>
            <RectangleCopy40>
              <Components data={data}>{`Interactions`}</Components>
              <Xxxxxxx2 data={data}>
                {`Set up click, tap, mouse-over, mouse-out, etc. to build anything you want.`}
              </Xxxxxxx2>
            </RectangleCopy40>
            <RectangleCopy32>
              <Animations data={data}>{`Animations`}</Animations>
              <Xxxxxxx3 data={data}>
                {`Create animations easily to build a delightful experience for your users.`}
              </Xxxxxxx3>
            </RectangleCopy32>
          </Frame124>
          <Frame125 data={data}>
            <RectangleCopy38>
              <SfxMusic data={data}>{`Custom Fonts`}</SfxMusic>
              <UploadSoundAndMus data={data}>
                {`Add your custom fonts to create something unique.`}
              </UploadSoundAndMus>
            </RectangleCopy38>
            <RectangleCopy36>
              <Interactions data={data}>{`Components`}</Interactions>
              <Xxxxxxx4 data={data}>
                {`Reusable components to help you build fast across the team.`}
              </Xxxxxxx4>
            </RectangleCopy36>
            <RectangleCopy7>
              <CustomFonts data={data}>{`SFX & Music`}</CustomFonts>
              <QuestSupportsGoogl data={data}>
                {`Build an immersive experience for your audience.`}
              </QuestSupportsGoogl>
            </RectangleCopy7>
            <RectangleCopy18>
              <ParallaxScrolling data={data}>{`Video`}</ParallaxScrolling>
              <Xxxxxxx5 data={data}>
                {`Embed video easily to create an engaging experience.`}
              </Xxxxxxx5>
            </RectangleCopy18>
            <RectangleCopy23>
              <TriggerWithScroll data={data}>
                {`Scroll Effects`}
              </TriggerWithScroll>
              <Xxxxxxx6 data={data}>
                {`Set up parallax scrolling and trigger special effects on scroll.`}
              </Xxxxxxx6>
            </RectangleCopy23>
          </Frame125>
        </FeaturesForDesigners>
        <SecPic1 data={data}>
          <Pic21 data={data}>
            <ForMarketers2>
              <ForMarketers3 data={data}>{`For marketers`}</ForMarketers3>
              <LoremIpsumForPlacCop1 data={data}>
                {`Get all the advanced features you need to captivate and capture your audience.`}
              </LoremIpsumForPlacCop1>
            </ForMarketers2>
          </Pic21>
        </SecPic1>
        <FeaturesForMarketers data={data}>
          <Frame1241 data={data}>
            <RectangleCopy31>
              <Video1 data={data}>{`Custom Domain`}</Video1>
              <Xxxxxxx7 data={data}>
                {`Launch fast with your own custom domain.`}
              </Xxxxxxx7>
            </RectangleCopy31>
            <RectangleCopy35>
              <Buttons1 data={data}>{`A/B testing`}</Buttons1>
              <Xxxxxxx8 data={data}>
                {`Creating a variant of a page is as easy as importing a new design document.`}
              </Xxxxxxx8>
            </RectangleCopy35>
            <RectangleCopy41>
              <Components1 data={data}>{`Custom Forms`}</Components1>
              <Xxxxxxx9 data={data}>
                {`Easily set up custom designed forms for customers to provide input or contact you.`}
              </Xxxxxxx9>
            </RectangleCopy41>
          </Frame1241>
          <Frame1251 data={data}>
            <RectangleCopy33>
              <Animations1 data={data}>{`Connect to CRM`}</Animations1>
              <Xxxxxxx10 data={data}>
                {`Save customer data to CRM tools like HubSpot, Mailchimp, Salesforce, etc.`}
              </Xxxxxxx10>
            </RectangleCopy33>
            <RectangleCopy37>
              <Interactions1 data={data}>{`SEO Friendly`}</Interactions1>
              <Xxxxxxx11 data={data}>
                {`Score high on SEO with easy setup and detailed controls.`}
              </Xxxxxxx11>
            </RectangleCopy37>
            <RectangleCopy39>
              <SfxMusic1 data={data}>{`Fast Page Loads`}</SfxMusic1>
              <UploadSoundAndMus1 data={data}>
                {`Optimized pages that load fast for best customer experience and high page ranking.`}
              </UploadSoundAndMus1>
            </RectangleCopy39>
          </Frame1251>
        </FeaturesForMarketers>
        <SecPic2 data={data}>
          <Pic3 data={data}>
            <ForDevelopers data={data}>
              <ForMarketers4 data={data}>{`For developers`}</ForMarketers4>
              <LoremIpsumForPlacCop2 data={data}>
                {`Let Quest automate away the monotonous so you can focus on what’s important. `}
              </LoremIpsumForPlacCop2>
            </ForDevelopers>
          </Pic3>
        </SecPic2>
        <FeaturesForDeveloper data={data}>
          <Frame1242 data={data}>
            <RectangleCopy24>
              <Video2 data={data}>{`Custom Code & APIs`}</Video2>
              <Xxxxxxx12 data={data}>
                {`Use custom libraries or write your own code to build exactly what you want.`}
              </Xxxxxxx12>
            </RectangleCopy24>
            <RectangleCopy25>
              <Buttons2 data={data}>{`Custom CSS`}</Buttons2>
              <Xxxxxxx13 data={data}>
                {`Add custom CSS for more control on your customer experience.`}
              </Xxxxxxx13>
            </RectangleCopy25>
            <RectangleCopy29>
              <Components2 data={data}>{`HTML Snippets`}</Components2>
              <Xxxxxxx14 data={data}>
                {`Build custom elements and interactions using HTML snippets.`}
              </Xxxxxxx14>
            </RectangleCopy29>
          </Frame1242>
          <Frame1252 data={data}>
            <RectangleCopy27>
              <Animations2 data={data}>{`iFrames`}</Animations2>
              <Xxxxxxx15 data={data}>
                {`Build custom elements and interactions using HTML snippets into an iFrame.`}
              </Xxxxxxx15>
            </RectangleCopy27>
            <RectangleCopy28>
              <Interactions2 data={data}>
                {`Team Version Control`}
              </Interactions2>
              <Xxxxxxx16 data={data}>
                {`Automatic versioning and roll-back means worry-free team collaboration.`}
              </Xxxxxxx16>
            </RectangleCopy28>
            <RectangleCopy8>
              <SfxMusic2 data={data}>{`SSL`}</SfxMusic2>
              <UploadSoundAndMus2 data={data}>
                {`Easily secure your site and data with SSL.`}
              </UploadSoundAndMus2>
            </RectangleCopy8>
          </Frame1252>
        </FeaturesForDeveloper>
        <Join data={data}>
          <JoinUsOnOurMissi data={data}>
            <JoinUsOnOurMissiSpan1
              data={data}
            >{`Join us`}</JoinUsOnOurMissiSpan1>
            <JoinUsOnOurMissiSpan2 data={data}>{` `}</JoinUsOnOurMissiSpan2>
            <JoinUsOnOurMissiSpan3
              data={data}
            >{`on our mission`}</JoinUsOnOurMissiSpan3>
          </JoinUsOnOurMissi>
          <ButtonOutlined2 variant="outlined" size="large" color="primary">
            {' '}
            Build for Free{' '}
          </ButtonOutlined2>
        </Join>
      </Page>
    </Property1HtmlD>
  );
}

export default Html;
