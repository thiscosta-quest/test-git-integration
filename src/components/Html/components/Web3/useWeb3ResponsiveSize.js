/**********************************************************************
 *
 *   Responsiveness hook generated by Quest
 *
 *   Responsive Logic for the component goes in this hook
 *   If you want to customize the min/max values for the breakpoints, open the component on Quest Editor.
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';

const useWeb3ResponsiveSize = () => {
  const [variant, setVariant] = React.useState('ScreensDesktop');

  React.useEffect(() => {
    const handlerScreensMobile = (e) =>
      setVariant((size) => (e.matches ? 'ScreensMobile' : size));

    const ScreensMobileSize = window.matchMedia('(max-width: 572px)');
    setVariant((size) => (ScreensMobileSize.matches ? 'ScreensMobile' : size));
    ScreensMobileSize.addEventListener('change', handlerScreensMobile);

    const handlerScreensTablet = (e) =>
      setVariant((size) => (e.matches ? 'ScreensTablet' : size));

    const ScreensTabletSize = window.matchMedia(
      '(min-width: 573px) and (max-width: 1105px)'
    );
    setVariant((size) => (ScreensTabletSize.matches ? 'ScreensTablet' : size));
    ScreensTabletSize.addEventListener('change', handlerScreensTablet);

    const handlerScreensDesktop = (e) =>
      setVariant((size) => (e.matches ? 'ScreensDesktop' : size));

    const ScreensDesktopSize = window.matchMedia('(min-width: 1106px)');
    setVariant((size) =>
      ScreensDesktopSize.matches ? 'ScreensDesktop' : size
    );
    ScreensDesktopSize.addEventListener('change', handlerScreensDesktop);
  }, []);

  return variant;
};

export default useWeb3ResponsiveSize;
